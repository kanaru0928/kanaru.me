name: Terraform Apply

on: 
  release:
    types: [published]

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: deployment
    strategy:
      matrix:
        environment:
          - dev
          - prod
    defaults:
      run:
        working-directory: infrastructure/environments/${{ matrix.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
      
      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: remix-app
          push: true
          tags: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/ecr-kanaru-me-${{ matrix.environment }}:latest
          
      - name: Check Terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_dir: infrastructure/environments/${{ matrix.environment }}
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"
          tf_version: ${{ vars.TF_VERSION }}
          tg_version: ${{ vars.TG_VERSION }}
  

      - name: Terraform Apply
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_dir: infrastructure/environments/${{ matrix.environment }}
          tg_command: apply
          tf_version: ${{ vars.TF_VERSION }}
          tg_version: ${{ vars.TG_VERSION }}
